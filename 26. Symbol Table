#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX 100

// Structure to represent a symbol table entry
typedef struct {
    char name[50];
    char type[20];
    int size;
    int address;
} Symbol;

// Symbol table structure
typedef struct {
    Symbol table[MAX];
    int count;
} SymbolTable;

// Initialize the symbol table
void initSymbolTable(SymbolTable *st) {
    st->count = 0;
}

// Insert an entry into the symbol table
void insert(SymbolTable *st, char *name, char *type, int size, int address) {
    if (st->count < MAX) {
        strcpy(st->table[st->count].name, name);
        strcpy(st->table[st->count].type, type);
        st->table[st->count].size = size;
        st->table[st->count].address = address;
        st->count++;
    } else {
        printf("Symbol table is full!\n");
    }
}

// Search for an entry in the symbol table
int search(SymbolTable *st, char *name) {
    for (int i = 0; i < st->count; i++) {
        if (strcmp(st->table[i].name, name) == 0) {
            return i; // Return index if found
        }
    }
    return -1; // Return -1 if not found
}

// Display the symbol table
void display(SymbolTable *st) {
    printf("\nSymbol Table:\n");
    printf("--------------------------------------------------\n");
    printf("Index | Name        | Type       | Size | Address\n");
    printf("--------------------------------------------------\n");
    for (int i = 0; i < st->count; i++) {
        printf("%5d | %-10s | %-10s | %4d | %7d\n", i, st->table[i].name, st->table[i].type, st->table[i].size, st->table[i].address);
    }
    printf("--------------------------------------------------\n");
}

// Main function for testing
int main() {
    SymbolTable st;
    initSymbolTable(&st);
    
    insert(&st, "x", "int", 4, 1000);
    insert(&st, "y", "float", 4, 1004);
    insert(&st, "arr", "int[10]", 40, 1008);
    
    display(&st);
    
    char searchKey[50];
    printf("\nEnter variable name to search: ");
    scanf("%s", searchKey);
    int index = search(&st, searchKey);
    
    if (index != -1) {
        printf("%s found at index %d\n", searchKey, index);
    } else {
        printf("%s not found in symbol table.\n", searchKey);
    }
    
    return 0;
}
